@page "/game/{Id}"

@using Codenames.Data;
@inject WordService _wordService

@if (game == null)
{
     game = _wordService.GetGame(int.Parse(Id));
}
@if (game != null)
{
    <div>
        <button type="button" class="join btn btn-primary neutral" onclick="joinGame()">Join Game</button>

        @if (!game.Players.Any(a => a.isSpyMaster && a.team == Team.Red))
        {
            <button type="button" class="sm-join btn btn-primary red" onclick="joinGameAsSm(0)">Join Game as Red SM</button>
        }
        @if (!game.Players.Any(a => a.isSpyMaster && a.team == Team.Blue))
        {
            <button type="button" class="sm-join btn btn-primary blue" onclick="joinGameAsSm(1)">Join Game as Blue SM</button>
        }

        <button type="button" class="leave btn btn-primary assassin" onclick="leaveGame()">Leave Game</button>
    </div>
    <br/>
    <br/>
    <div class="row">
        <div class="col-sm chat-column">
            <ChatControl id="red-chat">Red Chat</ChatControl>
        </div>
        <div class="col-md">
            <div class="grid-container">
                @foreach (var item in game.Words)
                {
                    var tmpWord = item;

                    <div class="grid-item @item.word @(game.IsOver || item.isGuessed ? item.state.ToString().ToLower() : "")" @onclick="() => _wordService.MarkAsClicked(game, tmpWord.word)">
                        @item.word
                    </div>
                }
            </div>
        </div>
        <div class="col-sm chat-column">
            <ChatControl id="blue-chat">Blue Chat</ChatControl>
        </div>
    </div>
}

@code {
    [Parameter]
    public string Id { get; set; }

    Game game = null;
}
